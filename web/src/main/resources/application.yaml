server:
  port: 8077
security:
  basic:
    enable: false
aws:
  region: us-west-1
  credentials:
    access-key: test
    secret-key: test
  s3:
    bucket: resource-bucket
    endpoint: http://127.0.0.1:4566
spring:
  application:
    name: resource-service
  datasource:
    url: jdbc:postgresql://localhost:5432/microservices
    username: postgres
    password: postgres
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    queue:
      create: Resources.Create
      create_dead: Resources.Create.Dead
      delete: Resources.Delete
      delete_dead: Resources.Delete.Dead
  jpa:
    hibernate:
      ddl-auto: update
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
song:
  service:
    connect:
      timeout: 2000
    read:
      timeout: 2000
    baseUrl: http://localhost:8088/songs

storage-service:
  baseUrl: http://localhost:8089/storages
  storages:
    staging: staging-storage
    permanent: permanent-storage

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
    instance:
    preferIpAddress: true

resilience4j:
  circuitbreaker:
    instances:
      CircuitBreakerService:
        failure-rate-threshold: 50
        minimum-number-of-calls: 2
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: count_based